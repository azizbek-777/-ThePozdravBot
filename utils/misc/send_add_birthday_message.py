from aiogram.types import Message
from aiogram.types import ReplyKeyboardMarkup

from keyboards.inline import add_birthday_keyboard

def generate_birthday_message(bot_username: str, chat_id: int, locale) -> tuple[str, ReplyKeyboardMarkup]:
    """
    Generates a birthday message and reply markup.

    :param bot_username: The username of the bot.
    :return: A tuple containing the message text and reply markup.
    """
    text = (
        "–ü—Ä–∏–≤–µ—Ç –≤—Å–µ–º! –°–ø–∞—Å–∏–±–æ, —á—Ç–æ –¥–æ–±–∞–≤–∏–ª–∏ –º–µ–Ω—è –≤ —Å–≤–æ—é –≥—Ä—É–ø–ø—É! üéâ "
        "–Ø –ø–æ–º–æ–≥—É –≤–∞—à–µ–π –≥—Ä—É–ø–ø–µ –≤—Å–µ–≥–¥–∞ –ø–æ–º–Ω–∏—Ç—å –æ –¥–Ω—è—Ö —Ä–æ–∂–¥–µ–Ω–∏—è—Ö!\n\n"
        "–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å –≤–∞—à –¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è –≤ –∫–∞–ª–µ–Ω–¥–∞—Ä—å –≥—Ä—É–ø–ø—ã\n\n"
        "–ß—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –¥—Ä—É–≥–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ /help"
    )

    # Replace this with your actual reply markup generation logic
    reply_markup = add_birthday_keyboard(bot_username, chat_id, locale)
    return text, reply_markup


async def send_birthday_message(message: Message, bot_username: str, locale):
    """
    Sends the birthday message to the user.

    :param message: The incoming message object.
    :param bot_username: The username of the bot.
    """
    text, reply_markup = generate_birthday_message(bot_username, message.chat.id)
    await message.answer(text, reply_markup=reply_markup)