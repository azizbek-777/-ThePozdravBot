from aiogram import Dispatcher
from datetime import datetime
from pytz import timezone as pytz_timezone, UTC

# Normalize and handle timezone conversion
def normalize_timezone(user_timezone: str):
    if user_timezone.startswith(('+', '-')):
        try:
            hours_offset = int(user_timezone)
            return UTC if hours_offset == 0 else pytz_timezone(f"Etc/GMT{'+' if hours_offset < 0 else '-'}{abs(hours_offset)}")
        except ValueError:
            raise ValueError(f"Invalid timezone format: {user_timezone}")
    return pytz_timezone(user_timezone)  # Assume it's a valid named timezone

async def send_congratulation_message(dp: Dispatcher, db):
    try:
        # Fetch reminder data once
        data = await db.get_reminder_groups_with_users()
        
        for group_id, user_id, birthday, user_timezone in data:
            tz = normalize_timezone(user_timezone)
            now = datetime.now(tz)
            
            # Check if today is the user's birthday
            if birthday.day == now.day and birthday.month == now.month:
                user = await dp.bot.get_chat(user_id)
                username = user.username
                if not username:
                    username = f"<a href='tg://user?id={user.id}'>{user.full_name}</a>"
                else:
                    username = f"@{username}"
                message = (
                    f"ü•≥ –°–µ–≥–æ–¥–Ω—è, <b>{birthday}</b>, –¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è —É {username}!\n\n"
                    "–î–∞–≤–∞–π—Ç–µ –ø–æ–∑–¥—Ä–∞–≤–∏–º —Å —ç—Ç–∏–º –∑–∞–º–µ—á–∞—Ç–µ–ª—å–Ω—ã–º –¥–Ω–µ–º! üéâ\n"
                    "–ü–æ–∂–µ–ª–∞–µ–º —Å—á–∞—Å—Ç—å—è, –∫—Ä–µ–ø–∫–æ–≥–æ –∑–¥–æ—Ä–æ–≤—å—è, —É—Å–ø–µ—Ö–æ–≤ –∏ –∏—Å–ø–æ–ª–Ω–µ–Ω–∏—è –≤—Å–µ—Ö –∂–µ–ª–∞–Ω–∏–π.\n\n"
                    f"–°–¥–µ–ª–∞–µ–º —ç—Ç–æ—Ç –¥–µ–Ω—å –æ—Å–æ–±–µ–Ω–Ω—ã–º –¥–ª—è {username}! üéÅ‚ú®"
                )
                # Send message to group chat
                await dp.bot.send_message(chat_id=group_id, text=message)

                # Send personal birthday message
                message = (
                    f"ü•≥ –°–µ–≥–æ–¥–Ω—è *{birthday}* ‚Äî –≤–∞—à –¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è!\n\n"
                    "–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º –≤–∞—Å —Å —ç—Ç–∏–º –∑–∞–º–µ—á–∞—Ç–µ–ª—å–Ω—ã–º —Å–æ–±—ã—Ç–∏–µ–º! üéâ\n"
                    "–ñ–µ–ª–∞–µ–º —Å—á–∞—Å—Ç—å—è, –∫—Ä–µ–ø–∫–æ–≥–æ –∑–¥–æ—Ä–æ–≤—å—è, —É—Å–ø–µ—Ö–æ–≤ –≤–æ –≤—Å–µ—Ö –Ω–∞—á–∏–Ω–∞–Ω–∏—è—Ö –∏ –∏—Å–ø–æ–ª–Ω–µ–Ω–∏—è —Å–∞–º—ã—Ö –∑–∞–≤–µ—Ç–Ω—ã—Ö –∂–µ–ª–∞–Ω–∏–π.\n\n"
                    "–ü—É—Å—Ç—å —ç—Ç–æ—Ç –¥–µ–Ω—å —Å—Ç–∞–Ω–µ—Ç –Ω–µ–∑–∞–±—ã–≤–∞–µ–º—ã–º! üéÅ‚ú®"
                )
                await dp.bot.send_message(chat_id=user_id, text=message, parse_mode="Markdown")

    except Exception as e:
        print(f"Error sending birthday messages: {e}")
